# Build code pipeline

name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - devops-pipelines/az-agent.yaml
      - az-agent/*

variables:
- name: AcrName
  value: <YOUR-ACR-NAME>
- name: WebAppName
  value: <YOUR-WEBAPP-NAME>
- name: ContainerAppName
  value: <YOUR-CONTAINER-APP-NAME>
- name: ContainerAppResourceGroupName
  value: <YOUR-CONTAINER-APP-RESOURCE-GROUP-NAME>
- name: ImageTagName
  value: ${{ variables['Build.BuildNumber'] }}

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: echo $(ImageTagName)
      displayName: 'Image tag name'

    - powershell: |
        $kubeconfig = "az-agent/kubectl.config.yaml"
        (Get-Content $kubeconfig).Replace("#{server-url}#", "$(K8sClusterUser)") | Set-Content $kubeconfig
        (Get-Content $kubeconfig).Replace("#{user-token}#", "$(K8sClusterToken)") | Set-Content $kubeconfig
      displayName: 'Update Kubectl token'

    - task: Docker@2
      displayName: 'ACR login'
      inputs:
        containerRegistry: <your-acr-service-connection>
        command: 'login'
    
    - task: Docker@2
      displayName: Build Image
      inputs:
        command: build
        containerRegistry: <your-acr-service-connection>
        repository: azagent
        Dockerfile: 'az-agent/Dockerfile'
        tags: |
          $(ImageTagName)
          latest

    - task: Docker@2
      displayName: Push Image
      inputs:
        command: push
        containerRegistry: <your-acr-service-connection>
        repository: azagent
        tags: |
          $(ImageTagName)
          latest

- stage: Publish
  dependsOn:
  - Build
  jobs:
  - deployment: Publish
    displayName: 'Publish'
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: AzureWebAppContainer@1
            displayName: Publish Agent
            inputs:
              azureSubscription: <your-azure-subscription>
              appName: $(WebAppName)
              containers: '$(AcrName).azurecr.io/azagent:$(ImageTagName)'

          - task: AzureCLI@2
            displayName: Publish Agent
            inputs:
              azureSubscription: <your-azure-subscription>
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              inlineScript: |
                #!/bin/bash
                az config set extension.use_dynamic_install=yes_without_prompt

                az containerapp update \
                --name $(ContainerAppName) \
                --resource-group $(ContainerAppResourceGroupName) \
                --image $(AcrName).azurecr.io/azagent:$(ImageTagName)